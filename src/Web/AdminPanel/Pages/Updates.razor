@page "/config-updates"

<PageTitle>OpenMU: Actualizaciones de Configuración</PageTitle>
<Breadcrumb IsFirstFromRoot="true" Caption="Actualizaciones de Configuración"/>
<h3>Actualizaciones de Configuración</h3>

@if (!this.SetupService.IsInstalled || this.SetupService.IsUpdateRequired)
{
    <div class="alert alert-info" role="alert">Por favor, primero instala las actualizaciones de base de datos en la <NavLink href="setup">página de Configuración</NavLink>.</div>
    return;
}
@if (!this._availableUpdates.Any())
{
    <div class="alert alert-success" role="alert">No hay actualizaciones de configuración disponibles.</div>
    return;
}

<div class="alert alert-light">
    <p>Hay nuevas actualizaciones de configuración disponibles. Puedes seleccionar cuáles aplicar a tu configuración.</p>
    <p>Las actualizaciones obligatorias siempre se aplican y no pueden deseleccionarse.</p>
    <p>Las actualizaciones requieren reiniciar el proceso del servidor para tomar efecto.</p>
</div>

@foreach (var update in this._availableUpdates)
{
    <div class="alert @(update.State == UpdateState.Failed ? "alert-warning" : update.Selected ? "alert-primary" : "alert-secondary")" role="alert">
        @if (update.State == UpdateState.Started)
        {
            <div class="spinner-border text-secondary spinner-border-sm" role="status">
                <span class="sr-only">Actualizando...</span>
            </div>
        }
        else if (update.State == UpdateState.Failed)
        {
            <span class="oi oi-bolt"></span>
        }
        else if (update.State == UpdateState.Installed)
        {
            <span class="oi oi-check"></span>
        }
        else if (update.IsMandatory)
        {
            <InputCheckbox @bind-Value="@update.Selected" disabled="disabled"></InputCheckbox>
        }
        else
        {
            <InputCheckbox @bind-Value="@update.Selected"></InputCheckbox>
        }
        <span>&nbsp;@update.Name (#@update.Version)</span>
        <hr/>
        <div class="alert alert-secondary">
            <span>@update.Description</span>
        </div>
    </div>
}

@if (this._overallState == UpdateState.Started)
{
    <button class="btn btn-primary" type="button" disabled>
        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
        Aplicando actualizaciones...
    </button>
}
else if (this._overallState == UpdateState.Failed)
{
    <button class="btn btn-primary" type="button" disabled>
        <span class="oi oi-bolt" role="status" aria-hidden="true"></span>
        ¡Falló la actualización!
    </button>
}
else if (this._availableUpdates.Any(u => u.Selected))
{
    <button class="btn btn-primary" type="button" @onclick="this.OnUpdateClickAsync">Aplicar actualizaciones seleccionadas</button>
}
else
{
    <button class="btn btn-primary" type="button" disabled>Aplicar actualizaciones seleccionadas</button>
}

@if (this._exception is { } exception)
{
    <hr/>
    <div class="alert alert-danger">
        <h3 class="alert-heading">
            <span class="oi oi-bolt"></span><span>&nbsp;@exception.Message</span>
        </h3>
        <hr/>
        <span>@exception.StackTrace</span>
    </div>
}
